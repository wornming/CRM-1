<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsds
        http://www.springframework.org/schema/jee
        http://www.springframework.org/schema/jee/spring-jee.xsd
        ">



	<!-- 加入包扫描以加载带了注解的要托管的bean -->
	<context:component-scan base-package="com.crm" />

	<!-- 加入事务注解驱动 -->
	<tx:annotation-driven transaction-manager="txManager"/>

	<!-- 加入事务管理器 mybatis使用过的是与jdbc同款的事务管理器，其他框架不一样 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- spring 整合mybatis -->
	<!-- 第一步，读取数据库配置信息 引入jdbc配置文件 准备创建数据源 -->
	<!-- 数据库配置读取 因为要创建数据源 要知道数据库的连接配置 -->
	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:db.properties"></property>
	</bean>

	<!-- 第二步，配置数据源，使用dbcp配置数据源 还可以使用c3p0配置，还可以使用默认的jdbc配置 -->
	<!-- dbcp配置 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driverName}"></property>
		<property name="url" value="${url}"></property>
		<property name="username" value="${user}"></property>
		<property name="password" value="${password}"></property>
	</bean>

	<!-- 第三步 拿到数据源，然后在spring中配置mybatis 的sessionfactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<!-- 配置mybatis中的别名 -->
		<property name="typeAliasesPackage" value="com.crm.bean"></property>

		<!-- 使用传统的mapper就在这里配置 -->
		<property name="mapperLocations"  value="classpath:com/crm/mapper/*.xml">

		</property>

		<!-- 这是用来配置mybatis中的configuration中的setting配置 -->
		<property name="configurationProperties">
			<props>
				<prop key="logImpl">Log4J</prop>
			</props>
		</property>
	</bean>

	<!-- 步骤四 配置sqlsession 创建sqlsessiontemplate 这个类是包装了mybatis中的sqlsession类，用于获取数据库的连接 -->
	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<!-- 只能通过构造方法注入sqlsessionfactory -->
		<constructor-arg ref="sqlSessionFactory"></constructor-arg>
	</bean>

</beans>
        